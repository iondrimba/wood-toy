CannonDebugRenderer=function(e,t,{THREE:s,CANNON:a}){this.CANNON=a,this.THREE=s,this.scene=e,this.world=t,this._meshes=[],this._material=new this.THREE.MeshBasicMaterial({color:65280,wireframe:!0}),this._sphereGeometry=new this.THREE.SphereGeometry(1),this._boxGeometry=new this.THREE.BoxGeometry(1,1,1),this._planeGeometry=new this.THREE.PlaneGeometry(10,10,10,10),this._cylinderGeometry=new this.THREE.CylinderGeometry(1,1,10,10)},CannonDebugRenderer.prototype={tmpVec0:new CANNON.Vec3,tmpVec1:new CANNON.Vec3,tmpVec2:new CANNON.Vec3,tmpQuat0:new CANNON.Vec3,update:function(){for(var e=this.world.bodies,t=this._meshes,s=this.tmpVec0,a=this.tmpQuat0,r=0,n=0;n!==e.length;n++)for(var i=e[n],c=0;c!==i.shapes.length;c++){var o=i.shapes[c];this._updateMesh(r,i,o),(h=t[r])&&(i.quaternion.vmult(i.shapeOffsets[c],s),i.position.vadd(s,s),i.quaternion.mult(i.shapeOrientations[c],a),h.position.copy(s),h.quaternion.copy(a)),r++}for(n=r;n<t.length;n++){var h;(h=t[n])&&this.scene.remove(h)}t.length=r},_updateMesh:function(e,t,s){var a=this._meshes[e];this._typeMatch(a,s)||(a&&this.scene.remove(a),a=this._meshes[e]=this._createMesh(s)),this._scaleMesh(a,s)},_typeMatch:function(e,t){if(!e)return!1;var s=e.geometry;return s instanceof THREE.SphereGeometry&&t instanceof CANNON.Sphere||s instanceof THREE.BoxGeometry&&t instanceof CANNON.Box||s instanceof THREE.PlaneGeometry&&t instanceof CANNON.Plane||s.id===t.geometryId&&t instanceof CANNON.ConvexPolyhedron||s.id===t.geometryId&&t instanceof CANNON.Trimesh||s.id===t.geometryId&&t instanceof CANNON.Heightfield},_createMesh:function(e){var t,s=this._material;switch(e.type){case CANNON.Shape.types.SPHERE:t=new THREE.Mesh(this._sphereGeometry,s);break;case CANNON.Shape.types.BOX:t=new THREE.Mesh(this._boxGeometry,s);break;case CANNON.Shape.types.PLANE:t=new THREE.Mesh(this._planeGeometry,s);break;case CANNON.Shape.types.CONVEXPOLYHEDRON:for(var a=new THREE.Geometry,r=0;r<e.vertices.length;r++){var n=e.vertices[r];a.vertices.push(new THREE.Vector3(n.x,n.y,n.z))}for(r=0;r<e.faces.length;r++)for(var i=e.faces[r],c=i[0],o=1;o<i.length-1;o++){var h=i[o],p=i[o+1];a.faces.push(new THREE.Face3(c,h,p))}a.computeBoundingSphere(),a.computeFaceNormals(),t=THREE.Mesh(a,s),e.geometryId=a.id;break;case CANNON.Shape.types.TRIMESH:var N=new THREE.Geometry,E=this.tmpVec0,l=this.tmpVec1,m=this.tmpVec2;for(r=0;r<e.indices.length/3;r++)e.getTriangleVertices(r,E,l,m),N.vertices.push(new THREE.Vector3(E.x,E.y,E.z),new THREE.Vector3(l.x,l.y,l.z),new THREE.Vector3(m.x,m.y,m.z)),o=N.vertices.length-3,N.faces.push(new THREE.Face3(o,o+1,o+2));N.computeBoundingSphere(),N.computeFaceNormals(),t=THREE.Mesh(N,s),e.geometryId=N.id;break;case CANNON.Shape.types.HEIGHTFIELD:N=new THREE.Geometry,E=this.tmpVec0,l=this.tmpVec1,m=this.tmpVec2;for(var y=0;y<e.data.length-1;y++)for(var f=0;f<e.data[y].length-1;f++)for(var d=0;d<2;d++)e.getConvexTrianglePillar(y,f,0===d),E.copy(e.pillarConvex.vertices[0]),l.copy(e.pillarConvex.vertices[1]),m.copy(e.pillarConvex.vertices[2]),E.vadd(e.pillarOffset,E),l.vadd(e.pillarOffset,l),m.vadd(e.pillarOffset,m),N.vertices.push(new THREE.Vector3(E.x,E.y,E.z),new THREE.Vector3(l.x,l.y,l.z),new THREE.Vector3(m.x,m.y,m.z)),r=N.vertices.length-3,N.faces.push(new THREE.Face3(r,r+1,r+2));N.computeBoundingSphere(),N.computeFaceNormals(),t=new THREE.Mesh(N,s),e.geometryId=N.id}return t&&this.scene.add(t),t},_scaleMesh:function(e,t){switch(t.type){case CANNON.Shape.types.SPHERE:var s=t.radius;e.scale.set(s,s,s);break;case CANNON.Shape.types.BOX:e.scale.copy(t.halfExtents),e.scale.multiplyScalar(2);break;case CANNON.Shape.types.CONVEXPOLYHEDRON:e.scale.set(1,1,1);break;case CANNON.Shape.types.TRIMESH:e.scale.copy(t.scale);break;case CANNON.Shape.types.HEIGHTFIELD:e.scale.set(1,1,1)}}};